
Review this code:

private List<DepositEntry> getDepositsByCreditCardAndCisPeriod(List<DepositEntry> succeededDeposits,
                                                               List<RequisitesItem> requisites) {

    //Map <String> creditCardRequisites =	getCreditCardRequisites(requisites).collect(Collectors.toMap(x, Function.identity()));

    Set<String> creditCardRequisitesSet = getCreditCardRequisites(requisites);
    return succeededDeposits.stream()
            .filter(item -> item.getCreated().isAfter(LocalDateTime.now().minusDays(30)))
            .filter(item -> Objects.nonNull(creditCardRequisitesSet.contains(item.getRequisiteId())))
            .collect(Collectors.toList());
            //creditCardRequisites.contains(item.getRequisiteId())
}

private Set <String> getCreditCardRequisites(List<RequisitesItem> requisites) {
    return requisites.stream()
            .filter(requisite -> CREDIT_CARD.equalsIgnoreCase(requisite.getMethod()))
            .map(RequisitesItem::getId)
            .collect(Collectors.toSet());
}

succededDeposits : 100 items
requisites: 50 items
Iterations: 100 * 50 = 5000   => 150

Review this code:

private List<DepositEntry> getDepositsByCreditCardAndCisPeriod(List<DepositEntry> succeededDeposits,
                                                               List<RequisitesItem> requisites) {

    return succeededDeposits.stream()
            .filter(item -> item.getCreated().isAfter(LocalDateTime.now().minusDays(30)))
            .filter(item -> getCreditCardRequisites(requisites).contains(item.getRequisiteId()))
            .collect(Collectors.toList());
}

private List<String> getCreditCardRequisites(List<RequisitesItem> requisites) {
    return requisites.stream()
            .filter(requisite -> CREDIT_CARD.equalsIgnoreCase(requisite.getMethod()))
            .map(RequisitesItem::getId)
            .collect(Collectors.toSet());
}

succededDeposits : 100 items
requisites: 50 items
Iterations: 100 * 50 = 5000   => 150

estudiar el clone
https://www.techiedelight.com/es/clone-method-in-java/